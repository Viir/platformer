sudo: false

language: node_js
node_js:
 - "node"
cache:
  yarn: true
  directories:
    # Cache build artifacts to avoid constantly rebuilding. See:
    # https://8thlight.com/blog/rob-looby/2016/04/07/caching-elm-builds-on-travis-ci.html
    - elm-stuff
    - tests/elm-stuff
    - node_modules
    # Install and cache sysconfcpus
    - sysconfcpus
    - ./yarn-cache

os:
  - osx
  - linux

env:
  matrix:
    - ELM_VERSION=0.18.0 TARGET_NODE_VERSION=node
    # - ELM_VERSION=0.18.0 TARGET_NODE_VERSION=4.0

before_install:
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - | # epic build time improvement - see https://github.com/elm-lang/elm-compiler/issues/1473#issuecomment-245704142
    if [ ! -d sysconfcpus/bin ];
    then
      git clone https://github.com/obmarg/libsysconfcpus.git;
      cd libsysconfcpus;
      ./configure --prefix=$TRAVIS_BUILD_DIR/sysconfcpus;
      make && make install;
      cd ..;
    fi

install:
  - nvm install $TARGET_NODE_VERSION
  - nvm use $TARGET_NODE_VERSION
  - node --version
  - npm --version
  - yarn --version
  - yarn config set cache-folder ./yarn-cache
  - yarn global add elm@$ELM_VERSION
  - yarn
  - mv $(yarn global bin)/elm-make $(yarn global bin)/elm-make-old
  - printf "#\041/bin/bash\n\necho \"Running elm-make with sysconfcpus -n 2\"\n\n$TRAVIS_BUILD_DIR/sysconfcpus/bin/sysconfcpus -n 2 elm-make-old \"\$@\"" > $(yarn global bin)/elm-make
  - chmod +x $(yarn global bin)/elm-make
  - elm-package install -y

script:
  - yarn elm-format --validate src/
  - yarn test
  - yarn elm-analyse